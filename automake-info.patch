--- automake-1.13.1/doc/automake.texi.orig	2013-01-01 12:50:13.000000000 +0100
+++ automake-1.13.1/doc/automake.texi	2013-01-02 17:52:44.118274937 +0100
@@ -36,15 +36,11 @@
 @end quotation
 @end copying
 
-@dircategory Software development
+@dircategory Programming tools:
 @direntry
-* Automake: (automake).         Making GNU standards-compliant Makefiles.
-@end direntry
-
-@dircategory Individual utilities
-@direntry
-* aclocal-invocation: (automake)aclocal Invocation.   Generating aclocal.m4.
-* automake-invocation: (automake)automake Invocation. Generating Makefile.in.
+* Automake: (automake).			Making GNU standards-compliant Makefiles
+* aclocal-invocation: (automake)aclocal.	Generating aclocal.m4
+* automake-invocation: (automake)automake.	Generating Makefile.in
 @end direntry
 
 @titlepage
@@ -97,7 +93,7 @@
 * Autotools Introduction::      An Introduction to the Autotools
 * Generalities::                General ideas
 * Examples::                    Some example packages
-* automake Invocation::         Creating a Makefile.in
+* automake::                    Creating a Makefile.in
 * configure::                   Scanning configure.ac, using aclocal
 * Directories::                 Declaring subdirectories
 * Programs::                    Building programs and libraries
@@ -174,7 +170,7 @@
 
 * Requirements::                Configuration requirements
 * Optional::                    Other things Automake recognizes
-* aclocal Invocation::          Auto-generating aclocal.m4
+* aclocal::                     Auto-generating aclocal.m4
 * Macros::                      Autoconf macros supplied with Automake
 
 Auto-generating aclocal.m4
@@ -1680,7 +1676,7 @@
 When starting a new project, we suggest you start with such a simple
 @file{configure.ac}, and gradually add the other tests it requires.
 The command @command{autoscan} can also suggest a few of the tests
-your package may need (@pxref{autoscan Invocation, , Using
+your package may need (@pxref{autoscan, , Using
 @command{autoscan} to Create @file{configure.ac}, autoconf, The
 Autoconf Manual}).
 
@@ -2488,7 +2484,7 @@
 would be chosen by automake; they would be @file{false-true.o} and
 @file{true-true.o}. (The name of the object files rarely matters.)
 
-@node automake Invocation
+@node automake
 @chapter Creating a @file{Makefile.in}
 @c This node used to be named "Invoking automake".  This @anchor
 @c allows old links to still work.
@@ -2737,7 +2733,7 @@
 @menu
 * Requirements::                Configuration requirements
 * Optional::                    Other things Automake recognizes
-* aclocal Invocation::          Auto-generating aclocal.m4
+* aclocal::                     Auto-generating aclocal.m4
 * Macros::                      Autoconf macros supplied with Automake
 @end menu
 
@@ -3127,11 +3127,11 @@ appear as dependencies in @file{Makefile
 @code{m4_include} is seldom used by @file{configure.ac} authors, but
 can appear in @file{aclocal.m4} when @command{aclocal} detects that
 some required macros come from files local to your package (as opposed to
-macros installed in a system-wide directory; @pxref{aclocal Invocation}).
+macros installed in a system-wide directory; @pxref{aclocal}).
 
 @end ftable
 
-@node aclocal Invocation
+@node aclocal
 @section Auto-generating aclocal.m4
 @c This node used to be named "Invoking automake".  This @anchor
 @c allows old links to still work.
@@ -3308,7 +3304,7 @@
 
 @vindex WARNINGS
 The environment variable @env{WARNINGS} is honored in the same
-way as it is for @command{automake} (@pxref{automake Invocation}).
+way as it is for @command{automake} (@pxref{automake}).
 
 @end table
 
@@ -4056,8 +4052,8 @@
 releases, you should not use any of them in new code.  @emph{All
 these macros will be removed in the next major Automake version};
 if you are still using them, running @command{autoupdate} should
-adjust your @file{configure.ac} automatically (@pxref{autoupdate
-Invocation, , Using @command{autoupdate} to Modernize
+adjust your @file{configure.ac} automatically (@pxref{autoupdate,
+, Using @command{autoupdate} to Modernize
 @file{configure.ac}, autoconf, The Autoconf Manual}).
 @emph{Do it NOW!}
 
@@ -5475,7 +5475,7 @@ aforementioned linking flags should be l
 passed to the tool invoked by @command{libtool} (hence the use of
 @samp{@var{library}_LDFLAGS} for libtool linking flags).  Generic
 options include @option{--tag=@var{tag}} and @option{--silent}
-(@pxref{Invoking libtool, , Invoking @command{libtool}, libtool, The
+(@pxref{libtool, , Invoking @command{libtool}, libtool, The
 Libtool Manual} for more options).  They should appear before the mode
 selection on the command line; in @file{Makefile.am}s they should
 be listed in the @samp{@var{library}_LIBTOOLFLAGS} variable.
@@ -5526,7 +5522,7 @@
 Since Automake 1.6, it has been decided that running
 @command{libtoolize} was none of Automake's business.  Instead, that
 functionality has been moved into the @command{autoreconf} command
-(@pxref{autoreconf Invocation, , Using @command{autoreconf}, autoconf,
+(@pxref{autoreconf, , Using @command{autoreconf}, autoconf,
 The Autoconf Manual}).  If you do not want to remember what to run and
 when, just learn the @command{autoreconf} command.  Hopefully,
 replacing existing @file{bootstrap.sh} or @file{autogen.sh} scripts by
@@ -10278,7 +10274,7 @@
 @cindex Option, @option{-W@var{category}}
 @cindex Option, @option{--warnings=@var{category}}
 These options behave exactly like their command-line counterpart
-(@pxref{automake Invocation}).  This allows you to enable or disable some
+(@pxref{automake}).  This allows you to enable or disable some
 warning categories on a per-file basis.  You can also setup some warnings
 for your entire project; for instance, try @samp{AM_INIT_AUTOMAKE([-Wall])}
 in your @file{configure.ac}.
@@ -11051,7 +11047,7 @@
 settings of Automake, or replace some of its rules.  Overriding
 Automake rules is often inadvisable, particularly in the topmost
 directory of a package with subdirectories.  The @option{-Woverride}
-option (@pxref{automake Invocation}) comes in handy to catch overridden
+option (@pxref{automake}) comes in handy to catch overridden
 definitions.
 
 Note that Automake does not make any distinction between rules with
@@ -11499,7 +11495,7 @@
 @end example
 
 The use of @option{--force-missing} ensures that auxiliary tools will be
-overridden by new versions (@pxref{automake Invocation}).
+overridden by new versions (@pxref{automake}).
 
 It is important to regenerate all of these files each time Automake is
 upgraded, even between bug fixes releases.  For instance, it is not
